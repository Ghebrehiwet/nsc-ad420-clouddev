{
  "swagger": "2.0",
  "info": {
    "description": "This is the task API",
    "version": "1.0.0",
    "title": "Swagger Task API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": {
    "name": "task",
    "description": "anything about task",
    "schemes": [
      "http"
    ]
  },
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get a new user",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be retrieved"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added to the store"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get a user with an id",
        "description": "",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object with an id that needs to be retrived from the store"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update a new user with an id",
        "description": "",
        "operationId": "updateUserWithId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object with id that needs to be updated"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      }
    },
    "/user/{id}/task": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Add task to a user",
        "description": "",
        "operationId": "addTaskUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task object added to a user object"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Tasks of a user to be updated",
        "description": "",
        "operationId": "updateTaskUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task object updated to a user object"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      }
    },
    "/user/{id}/task/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Tasks with id of a user to be retrieved",
        "description": "",
        "operationId": "retrieveTaskWithIdOfUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Retrieving a task with an id for a user"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Tasks with id of a user to be updated",
        "description": "",
        "operationId": "updateTaskWithIdOfUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Updating a task with an id for a user"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Tasks with id of a user to be deleted",
        "description": "",
        "operationId": "deleteTaskWithIdOfUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Deleting a task with an id for a user"
          }
        ],
        "required": true,
        "schema": null,
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "completionDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "task status",
          "enum": [
            "new",
            "in progress",
            "blocked",
            "completed"
          ]
        },
        "users": {
          "type": "array",
          "owner": {
            "$ref": "#/definitions/User"
          }
        }
      }
    }
  }
}