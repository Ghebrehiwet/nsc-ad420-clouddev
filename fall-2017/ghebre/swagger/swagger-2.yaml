swagger: '2.0'
info:
  description: This is the task API.
  version: 1.0.0
  title: Swagger Task api
  termsOfService: 'http://toddysm.com/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: taskapi.toddysm.com
basePath: /v2
tags:
  - name: task
    description: Everything about tasks
schemes:
  - http
paths:
  /users:
    post:
      tags:
        - user
      summary: Add a new user
      description: ''
      operationId: addUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be added to the
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input
    put:
      tags:
        - user
      summary: Update an existing user
      description: ''
      operationId: updateUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception
    get:
      tags:
        - user
      summary: Get an existing user
      description: ''
      operationId: getUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be retrieved
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception
    delete:
      tags:
        - user
      summary: Delete an existing user
      description: ''
      operationId: deleteUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception
  '/user/{id}':
    get:
      tags:
        - user
      summary: Find user by ID
      description: ''
      operationId: getUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user by ID
      description: ''
      operationId: updateUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
    post:
      tags:
        - user
      summary: Add user by ID
      description: ''
      operationId: addUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user by ID
      description: ''
      operationId: deleteUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  '/user/{id}/task':
    get:
      tags:
        - user
      summary: Find Tasks of user by ID
      description: ''
      operationId: getTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    post:
      tags:
        - user
      summary: Add Tasks of user by ID
      description: ''
      operationId: addTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    put:
      tags:
        - user
      summary: Update Tasks of user by ID
      description: ''
      operationId: updateTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    delete:
      tags:
        - user
      summary: Delete Tasks of user by ID
      description: ''
      operationId: deleteTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
  '/user/{id}/task/{id}':
    get:
      tags:
        - user
      summary: Find Tasks of user by ID for each user by id
      description: ''
      operationId: getIdOfTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    post:
      tags:
        - user
      summary: Add Tasks bu id of user by ID
      description: ''
      operationId: addIdTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    put:
      tags:
        - user
      summary: Update Id Tasks of user by ID
      description: ''
      operationId: updateIdTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
    delete:
      tags:
        - user
      summary: Delete Id Tasks of user by ID
      description: ''
      operationId: deleteIdTasksOfUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of user
          required: true
          type: integer
          maximum: 100
          minimum: 1
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
  Task:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      creationDate:
        type: string
        format: date-time
      dueDate:
        type: string
        format: date-time
      completionDate:
        type: string
        format: date-time
      status:
        type: string
        description: task status
        enum:
          - new
          - in progress
          - blocked
          - completed
      users:
        type: array
        items:
          $ref: '#/definitions/User'
